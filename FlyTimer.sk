#___________.__         ___________.__                      
#\_   _____/|  | ___.__.\__    ___/|__| _____   ___________ 
# |    __)  |  |<   |  |  |    |   |  |/     \_/ __ \_  __ \
# |     \   |  |_\___  |  |    |   |  |  Y Y  \  ___/|  | \/
# \___  /   |____/ ____|  |____|   |__|__|_|  /\___  >__|   
#     \/         \/                         \/     \/       

#FlyTimer - Give players fly mode for a specified amount of time
#By: DroidVengeance


variables:
	{flyTimer.%player%.check} = 0





#COMMAND BEGINS
command flytimer <player> <integer>:
	permission: {@flyGivePerm}
	trigger:
		if player-arg is not set:
			message "{@prefix} &cPlease specify a player..."
			stop
		if arg-2 is not set:
			message "{@prefix} &cPlease specify an amount of time in minutes..."
			stop
		if arg-2 <= 0:
			message "{@prefix} &cPlease specify an amount of time higher than 0..."
			stop
		else:
			if player-arg's fly mode is false:
				set {flyTimer.%player-arg%.start} to arg 2
				set {flyTimer.%player-arg%.timer} to {flyTimer.%player-arg%.start} * 60
				set {flyTimer.%player-arg%.notify} to {flyTimer.%player-arg%.timer}
				set player-arg's fly mode to true
				if arg 2 = 1:
					send "{@prefix} &bFly mode has been given to you for %arg-2% minute." to player-arg
				if arg 2 > 1:
					send "{@prefix} &bFly mode has been given to you for %arg-2% minutes." to player-arg
			else:
				message "{@prefix} &cThat player already has fly mode..."
				stop
#COMMAND ENDS				
				
				
#TIMER BEGINS				
every 1 second:
	loop all players:
		if {flyTimer.%loop-player%.check} is less than {flyTimer.%loop-player%.timer}:
			if {@actionbar} is true:
				set action bar of loop-player to "&eFlytime Remaining: &b&l%{flyTimer.%loop-player%.notify}% Seconds"
			if {@sidebar} is true:
				set name of sidebar of loop-player to "{@prefix}"
				set score "&aTime:" in sidebar of loop-player to {flyTimer.%loop-player%.notify}
			subtract 1 from {flyTimer.%loop-player%.notify}
			add 1 to {flyTimer.%loop-player%.check}
			stop
		else:
			if {flyTimer.%loop-player%.check} = {flyTimer.%loop-player%.timer}:
				set action bar of loop-player to ""
				wipe loop-player's sidebar
				set loop-player's fly mode to false
				send "{@prefix} &bYour fly mode time has run out." to loop-player
				delete {flyTimer.%loop-player%.start}
				delete {flyTimer.%loop-player%.check}
				delete {flyTimer.%loop-player%.timer}
				stop
#TIMER ENDS
		

#___________.__         ___________.__                      
#\_   _____/|  | ___.__.\__    ___/|__| _____   ___________ 
# |    __)  |  |<   |  |  |    |   |  |/     \_/ __ \_  __ \
# |     \   |  |_\___  |  |    |   |  |  Y Y  \  ___/|  | \/
# \___  /   |____/ ____|  |____|   |__|__|_|  /\___  >__|   
#     \/         \/                         \/     \/       

#FlyTimer - Give players fly mode for a specified amount of time
#By: DroidVengeance


variables:
	{flyTimer.%player%.check} = 0

#Generate all the files and load variables#
on script load:
	send "___________.__         ___________.__" to the console      
	send "\_   _____/|  | ___.__.\__    ___/|__| _____   ___________" to the console
	send " |    __)  |  |<   |  |  |    |   |  |/     \_/ __ \_  __ \" to the console
	send " |     \   |  |_\___  |  |    |   |  |  Y Y  \  ___/|  | \/" to the console
	send " \___  /   |____/ ____|  |____|   |__|__|_|  /\___  >__|   " to the console
	send "     \/         \/                         \/     \/       " to the console
	if folder "plugins/FlyTimer" doesn't exists:
		create folder "plugins/FlyTimer"
		send "[FAQs] &fCreating folder..." to the console
	if file "plugins/FlyTimer/config.yml" doesn't exists:
		download from "https://bit.ly/2xbJXX8" to "plugins/FlyTimer/config.yml"
		send "[FAQs] &fGenerating config.yml..." to the console
	set {ft.version} to skutil yaml value "version" from file "/plugins/FlyTimer/config.yml"
	send "Your Version: %{ft.version}%" to the console
	set {_vercheck} to text from "https://bit.ly/2Ndt0pn"
	send "Latest Version: %{_vercheck}%" to the console
	set {ft.prefix} to skutil yaml value "prefix" from file "/plugins/FlyTimer/config.yml"
	set {ft.actionbar} to skutil yaml value "actionbar" from file "/plugins/FlyTimer/config.yml"
	set {ft.sidebar} to skutil yaml value "sidebar" from file "/plugins/FlyTimer/config.yml"
	set {ft.permission} to skutil yaml value "flyGivePerm" from file "/plugins/FlyTimer/config.yml"
	set {ft.playerNotSpecified} to skutil yaml value "playerNotSpecified" from file "/plugins/FlyTimer/config.yml"
	set {ft.timeNotSpecified} to skutil yaml value "timeNotSpecified" from file "/plugins/FlyTimer/config.yml"
	set {ft.timeTooLow} to skutil yaml value "timeTooLow" from file "/plugins/FlyTimer/config.yml"
	set {ft.alreadyGiven} to skutil yaml value "alreadyGiven" from file "/plugins/FlyTimer/config.yml"
	set {ft.timeHasRunOut} to skutil yaml value "timeHasRunOut" from file "/plugins/FlyTimer/config.yml"



#COMMAND BEGINS
command flytimer <player> <integer>:
	permission: {ft.permission}
	trigger:
		if player-arg is not set:
			message "%{ft.prefix}% %{ft.playerNotSpecified}%"
			stop
		if arg-2 is not set:
			message "%{ft.prefix}% %{ft.timeNotSpecified}%"
			stop
		if arg-2 <= 0:
			message "%{ft.prefix}% %{ft.timeTooLow}%"
			stop
		else:
			if player-arg's fly mode is false:
				set {flyTimer.%player-arg%.start} to arg 2
				set {flyTimer.%player-arg%.timer} to {flyTimer.%player-arg%.start} * 60
				set {flyTimer.%player-arg%.notify} to {flyTimer.%player-arg%.timer}
				set player-arg's fly mode to true
				if arg 2 = 1:
					send "%{ft.prefix}% &bFly mode has been given to you for %arg-2% minute." to player-arg
				if arg 2 > 1:
					send "%{ft.prefix}% &bFly mode has been given to you for %arg-2% minutes." to player-arg
			else:
				message "%{ft.prefix}% %{ft.alreadyGiven}%"
				stop
#COMMAND ENDS				
				
				
#TIMER BEGINS				
every 1 second:
	loop all players:
		if {flyTimer.%loop-player%.check} is less than {flyTimer.%loop-player%.timer}:
			if {ft.actionbar} is true:
				set action bar of loop-player to "&eFlytime Remaining: &b&l%{flyTimer.%loop-player%.notify}% Seconds"
			if {ft.sidebar} is true:
				set name of sidebar of loop-player to "%{ft.prefix}%"
				set score "&aTime:" in sidebar of loop-player to {flyTimer.%loop-player%.notify}
			subtract 1 from {flyTimer.%loop-player%.notify}
			add 1 to {flyTimer.%loop-player%.check}
			stop
		else:
			if {flyTimer.%loop-player%.check} = {flyTimer.%loop-player%.timer}:
				set action bar of loop-player to ""
				wipe loop-player's sidebar
				set loop-player's fly mode to false
				send "%{ft.prefix}% %{ft.timeHasRunOut}%" to loop-player
				delete {flyTimer.%loop-player%.start}
				delete {flyTimer.%loop-player%.check}
				delete {flyTimer.%loop-player%.timer}
				stop
#TIMER ENDS
		
